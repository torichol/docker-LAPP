# docker-compose による LAPP 環境作成 ＠2018/11/24

# docker-compose の使用バージョン
version: "3"
# docker-compose がバージョン 1.13.0以降 の場合、version 3.0 に対応

# コンテナから作られるサービスの定義
services:

  # コンテナ名称
  pgsql:

    # コンテナを作成するためのイメージ
    #image: postgres:11.1
    # イメージを作成するための DockerFile のある場所
    build: ./pgsql

    # 公開ポート
    ports:
      - "5432:5432"

    # このコンテナのための環境変数の設定
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      #POSTGRES_DB: pguser
      #POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=ja_JP.UTF-8"

    # マウントボリューム～コンテナデータと手元データの連携定義
    volumes:
      - db:/var/lib/postgresql/data
      # 手元のパス：コンテナのパス
      # 「db」という名称のボリュームと /var/lib/postgresql/data を結びつける

  # コンテナ名称
  web:

    # イメージを作成するための DockerFile のある場所
    build: ./web
    # ⇒ このファイルから見て ./web/Dockerfile が対象となる

    # 公開ポート
    ports:
      - "80:80"
      # 外部公開ポート番号：コンテナのポート番号

    # マウントボリューム～コンテナデータと手元データの連携定義
    volumes:
      - ./html/:/var/www/html
      # 手元のパス：コンテナのパス

    # 別コンテナとの連携定義
    depends_on:
      - pgsql
      # 連携するコンテナ名称
      # この記述があると pgsql コンテナを先に起動し、
      # その後この web コンテナを起動する

# マウントボリューム～コンテナデータと手元データの連携定義
volumes:
  db:
